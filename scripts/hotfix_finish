#!/usr/bin/env bash

SCRIPT_PATH=$0
SCRIPT_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)

# Variables which can be overridden by environment variables.
PROJECT_ROOT_DIR=${PROJECT_ROOT_DIR:-$(git rev-parse --show-toplevel)}
REMOTE_NAME=${REMOTE_NAME:-"origin"}
BRANCH_PREFIX=${BRANCH_PREFIX:-"hotfix/"}
TAG_PREFIX=${TAG_PREFIX:-"v"}
MAIN_BRANCH_NAME=${MAIN_BRANCH_NAME:-"main"}
DEVELOPMENT_BRANCH_NAME=${DEVELOPMENT_BRANCH_NAME:-"development"}

# Command line arguments.
arguments=()
TARGET_VERSION=
DEVELOPMENT_VERSION=
CONTINUE=
FORCE=

show_help() {
  printf "Usage: %s <hotfix-version> <development-version> [options]\n" "$(basename "$SCRIPT_PATH")"
  printf "\n"
  printf "Options:\n"
  printf "  -m, --continue-from-main         Continue from merging into the main branch.\n"
  printf "  -d, --continue-from-development  Continue from merging into the development branch.\n"
  printf "  -f, --force                      Push to the remote repository forcefully.\n"
  printf "  -h, --help                       Display this help and exit.\n"
  printf "  --                               Do not interpret any more arguments as options.\n"
  exit 1
}

while :; do
  case $1 in
    -m|--continue-from-main)
      CONTINUE="--continue-from-main"
      ;;
    -d|--continue-from-development)
      CONTINUE="--continue-from-development"
      ;;
    -f|--force)
      FORCE=$1
      ;;
    -h|-\?|--help)
      show_help
      ;;
    --)
      shift
      break
      ;;
    -?*)
      printf "Error: Unknown option '%s'\n" "$1"
      show_help
      ;;
    ?*)
      arguments+=("$1")
      ;;
    *)
      break
  esac
  shift
done

while :; do
  case $1 in
    ?*)
      arguments+=("$1")
      ;;
    *)
      break
  esac
  shift
done

[ ${#arguments[@]} -ne 2 ] && show_help

for argument in "${arguments[@]}"; do
  if [ -z "$TARGET_VERSION" ]; then
    TARGET_VERSION=$argument
  elif [ -z "$DEVELOPMENT_VERSION" ]; then
    DEVELOPMENT_VERSION=$argument
  else
    show_help
  fi
done

source "$SCRIPT_DIR/internal"
finish
exit $?
