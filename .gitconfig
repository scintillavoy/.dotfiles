[user]
	email = scintillavoy@gmail.com
	name = Dongyoung Moon
[init]
	defaultBranch = main
[alias]
	a = add
	aa = add --all
	ai = add -i
	################
	b = branch
	ba = branch --all
	br = branch --remotes
	bnm = branch --no-merged
	banm = branch --all --no-merged
	brnm = branch --remotes --no-merged
	bv = branch -vv
	bva = branch -vv --all
	bvr = branch -vv --remotes
	bvnm = branch -vv --no-merged
	bvanm = branch -vv --all --no-merged
	bvrnm = branch -vv --remotes --no-merged
	bd = branch --delete
	bD = branch --delete --force
	bm = branch --move
	bM = branch --move --force
	################
	bak = !git commit --allow-empty -m 'Backup commit (staged)' && git add -A && git commit --allow-empty -m 'Backup commit (unstaged)' && git push --force-with-lease && git reset HEAD~ && git reset HEAD~ --soft
	################
	bs = bisect
	bss = bisect start
	bssf = bisect start --first-parent
	bsg = bisect good
	bsb = bisect bad
	bsn = bisect new
	bso = bisect old
	bsr = bisect run
	bsrp = bisect replay
	bsrs = bisect reset
	bsl = bisect log
	bssk = bisect skip
	################
	co = checkout
	cob = checkout -b
	coB = checkout -B
	col = checkout -
	################
	cf = config
	cfl = config --list
	cfll = config --list --local
	cfuser = !git config user.email 'scintillavoy@gmail.com' && git config user.name 'Dongyoung Moon'
	################
	cp = cherry-pick
	cpa = cherry-pick --abort
	cpc = cherry-pick --continue
	################
	ccc = !git reset --hard && git clean -df
	cccx = !git reset --hard && git clean -xdf
	cccb = !delete_merged_branches
	################
	cl = clone
	################
	c = commit
	ca = commit --all
	cm = commit --message
	cam = commit --all --message
	cd = commit --amend
	cda = commit --amend --all
	cdm = commit --amend --message
	cdam = commit --amend --all --message
	cdned = commit --amend --no-edit
	cdneda = commit --amend --no-edit --all
	ce = commit --allow-empty
	cem = commit --allow-empty --message
	################
	f = fetch
	fp = fetch --prune
	################
	i = init
	################
	# l
	# la
	# lA
	# lr
	# lu

	# lf
	# lfu
	# lft
	# lftu
	# lftv
	# lftvu
	# lfv
	# lfvu

	# lt
	# lta
	# ltA
	# ltr
	# ltu
	# ltv
	# ltva
	# ltvA
	# ltvr
	# ltvu

	# lv
	# lva
	# lvA
	# lvr
	# lvu

	lg = log --date=format-local:'%y-%m-%d %H:%M' --format='%C(auto)%h%d %s %Cgreen%cd %C(bold blue)%an' --graph
	lga = log --date=format-local:'%y-%m-%d %H:%M' --format='%C(auto)%h%d %s %Cgreen%cd %C(bold blue)%an' --graph --all
	lgA = !git log --date=format-local:'%y-%m-%d %H:%M' --format='%C(auto)%h%d %s %Cgreen%cd %C(bold blue)%an' --graph $(git rev-list -g --all)
	lgr = log --date=format-local:'%y-%m-%d %H:%M' --format='%C(auto)%h%d %s %Cgreen%cd %C(bold blue)%an' --reverse
	lgu = log --date=format-local:'%y-%m-%d %H:%M' --format='%C(auto)%h%d %s %Cgreen%cd %C(bold blue)%an' --graph @{upstream}

	lgf = log --date=format-local:'%y-%m-%d %H:%M' --format='%C(auto)%h%d %s %Cgreen%cd %C(bold blue)%an' --graph --first-parent
	lgfu = log --date=format-local:'%y-%m-%d %H:%M' --format='%C(auto)%h%d %s %Cgreen%cd %C(bold blue)%an' --graph --first-parent @{upstream}
	# lgft
	# lgftu
	# lgftv
	# lgftvu
	lgfv = log --date=format-local:'%y-%m-%d %H:%M' --format='%C(auto)%h%d %s %Cgreen%cd %C(bold blue)%an%n%w(0,2,2)%C(auto)%b' --graph --first-parent
	lgfvu = log --date=format-local:'%y-%m-%d %H:%M' --format='%C(auto)%h%d %s %Cgreen%cd %C(bold blue)%an%n%w(0,2,2)%C(auto)%b' --graph --first-parent @{upstream}

	# lgt
	# lgta
	# lgtA
	# lgtr
	# lgtu
	# lgtv
	# lgtva
	# lgtvA
	# lgtvr
	# lgtvu

	lgv = log --date=format-local:'%y-%m-%d %H:%M' --format='%C(auto)%h%d %s %Cgreen%cd %C(bold blue)%an%n%w(0,2,2)%C(auto)%b' --graph
	lgva = log --date=format-local:'%y-%m-%d %H:%M' --format='%C(auto)%h%d %s %Cgreen%cd %C(bold blue)%an%n%w(0,2,2)%C(auto)%b' --graph --all
	lgvA = !git log --date=format-local:'%y-%m-%d %H:%M' --format='%C(auto)%h%d %s %Cgreen%cd %C(bold blue)%an%n%w(0,2,2)%C(auto)%b' --graph $(git rev-list -g --all)
	lgvr = log --date=format-local:'%y-%m-%d %H:%M' --format='%C(auto)%h%d %s %Cgreen%cd %C(bold blue)%an%n%w(0,2,2)%C(auto)%b' --reverse
	lgvu = log --date=format-local:'%y-%m-%d %H:%M' --format='%C(auto)%h%d %s %Cgreen%cd %C(bold blue)%an%n%w(0,2,2)%C(auto)%b' --graph @{upstream}
	################
	m = merge
	ma = merge --abort
	mc = merge --continue
	mff = merge --ff-only
	mnff = merge --no-ff
	mnffnc = merge --no-ff --no-commit
	mdry = merge --no-ff --no-commit
	msk = merge --skip
	################
	pl = pull
	plff = pull --ff-only
	plnff = pull --no-ff
	################
	ps = push
	psoc = push origin HEAD
	psuoc = push -u origin HEAD
	psd = push --delete
	psdo = push --delete origin
	pst = push --tags
	################
	rb = rebase
	rba = rebase --abort
	rbc = rebase --continue
	rbd = rebase --reset-author-date
	rbdi = rebase --reset-author-date --interactive
	rbi = rebase --interactive
	rbsk = rebase --skip
	################
	rs = reset
	rss = reset --soft
	rsh = reset --hard
	rsl = reset HEAD~
	rssl = reset --soft HEAD~
	rshl = reset --hard HEAD~
	rsu = reset @{upstream}
	rssu = reset --soft @{upstream}
	rshu = reset --hard @{upstream}
	################
	rst = restore
	rsts = restore --staged
	################
	rmt = remote
	rmta = remote add
	rmtr = remote rm
	rmtv = remote -v
	rmtsu = remote set-url
	rmtgu = remote get-url
	################
	# root
	################
	rv = revert
	rvnc = revert --no-commit
	rvdry = revert --no-commit
	################
	s = status
	################
	sh = show
	################
	st = stash
	sta = stash apply
	std = stash drop
	stl = stash list
	stp = stash pop
	stps = stash push --include-untracked
	stpss = stash push --staged
	sts = stash show
	################
	t = tag
	td = tag --delete
	tr = ls-remote --tags
	################
	ui = update-index
	uiskw = update-index --skip-worktree
	uinskw = update-index --no-skip-worktree
