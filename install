#!/usr/bin/env bash

ask() {
  local prompt=$1
  while :; do
    read -p "$prompt ([yes]/no): " -r
    REPLY=${REPLY:-"yes"}
    case "$REPLY" in
      [yY]|[yY][eE][sS])
        return 0
        ;;
      [nN]|[nN][oO])
        return 1
        ;;
    esac
  done
}

# ------------------------------------------------------------------------------
# Copy dotfiles.
# ------------------------------------------------------------------------------

files=(
  .gitconfig
  .vimrc
  .zshrc
  .p10k.zsh
)

for file in "${files[@]}"; do
  if ask "Do you want to copy $file?"; then
    if [ -f "$HOME/$file" ]; then
      mv "$HOME/$file" "$HOME/$file.bak"
    fi
    cp "./$file" "$HOME/$file"
  fi
done

# ------------------------------------------------------------------------------
# Generate shell completions.
# ------------------------------------------------------------------------------

completion_file=$HOME/.completions.zsh

if ask "Do you want to generate shell completion for flutter?"; then
  if command -v flutter &> /dev/null; then
    flutter bash-completion >> "$completion_file.temp"
  fi
fi

if [ -f "$completion_file.temp" ]; then
  if [ -f "$completion_file" ]; then
    mv "$completion_file" "$completion_file.bak"
  fi
  mv "$completion_file.temp" "$completion_file"
fi

zsh_functions=$HOME/.zsh-functions
mkdir -p "$zsh_functions"

if ask "Do you want to generate shell completion for rustup?"; then
  if command -v rustup &> /dev/null; then
    rustup completions zsh > "$zsh_functions/_rustup"
  fi
fi

if ask "Do you want to generate shell completion for cargo?"; then
  if command -v rustup &> /dev/null; then
    rustup completions zsh cargo > "$zsh_functions/_cargo"
  fi
fi

if ask "Do you want to generate shell completion for mise?"; then
  if command -v mise &> /dev/null; then
    mise completion zsh > "$zsh_functions/_mise"
  fi
fi

if ask "Do you want to generate shell completion for docker and docker-compose?"; then
  etc=/Applications/Docker.app/Contents/Resources/etc
  if [ -d $etc ]; then
    ln -s $etc/docker.zsh-completion "$zsh_functions/_docker"
    ln -s $etc/docker-compose.zsh-completion "$zsh_functions/_docker-compose"
  fi
fi

# ------------------------------------------------------------------------------
# Apply patches.
# ------------------------------------------------------------------------------

if ask "Do you want to apply a patch for fzf?"; then
  # The patch should be applied to fzf with version <= 0.43.0
  file=$(brew --prefix fzf)/shell/key-bindings.zsh
  if [ -f "$file" ]; then
    patch -b "$file" ./fzf/shell/key-bindings.patch
  fi
fi
