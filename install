#!/usr/bin/env bash

ask() {
  local prompt=$1
  while :; do
    read -p "$prompt ([yes]/no): " -r
    REPLY=${REPLY:-"yes"}
    case "$REPLY" in
      [yY]|[yY][eE][sS])
        return 0
        ;;
      [nN]|[nN][oO])
        return 1
        ;;
    esac
  done
}

ask "Do you want to copy dotfiles?"
copy_dotfiles=$?

ask "Do you want to generate shell completion setup scripts?"
generate_completions=$?

ask "Do you want to apply patches?"
apply_patches=$?

# ------------------------------------------------------------------------------
# Copy dotfiles.
# ------------------------------------------------------------------------------
if [ $copy_dotfiles -eq 0 ]; then
  files=(.gitconfig .vimrc .zshrc .p10k.zsh)
  for file in "${files[@]}"; do
    if [ -f "$HOME/$file" ]; then
      mv "$HOME/$file" "$HOME/$file.bak"
    fi
    cp "./$file" "$HOME/$file"
  done
fi

# ------------------------------------------------------------------------------
# Generate shell completion setup scripts.
# ------------------------------------------------------------------------------
if [ $generate_completions -eq 0 ]; then
  file=.completions.zsh
  if [ -f "$HOME/$file" ]; then
    mv "$HOME/$file" "$HOME/$file.bak"
  fi

  commands=(
    "flutter bash-completion"
    "kubectl completion zsh"
    "stern --completion=zsh"
  )

  for command in "${commands[@]}"; do
    if command -v "${command%% *}" &> /dev/null; then
      eval "$command" >> "$HOME/$file"
      echo >> "$HOME/$file"
    fi
  done
fi

# ------------------------------------------------------------------------------
# Apply patches.
# ------------------------------------------------------------------------------
if [ $apply_patches -eq 0 ]; then
  file=$(brew --prefix fzf)/shell/key-bindings.zsh
  if [ -f "$file" ]; then
    patch -b "$file" ./fzf/shell/key-bindings.patch
  fi
fi
